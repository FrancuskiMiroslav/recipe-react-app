{"version":3,"sources":["Recipe.js","App.js","reportWebVitals.js","index.js","recipe.module.css"],"names":["Recipe","title","calories","image","ingredients","className","style","recipe","map","ingredient","text","src","alt","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","URL","useEffect","getRecipes","a","fetch","response","json","data","hits","console","log","onSubmit","e","preventDefault","type","value","onChange","target","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"iQAkBeA,EAfA,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YACzC,OACC,sBAAKC,UAAWC,IAAMC,OAAtB,UACC,6BAAKN,IACL,6BACEG,EAAYI,KAAI,SAACC,GAAD,OAChB,6BAAKA,EAAWC,YAGlB,4BAAIR,IACJ,qBAAKS,IAAKR,EAAOS,IAAI,SCmDTC,G,MA5DH,WACX,IADiB,EAIaC,mBAAS,IAJtB,mBAIVC,EAJU,KAIDC,EAJC,OAKWF,mBAAS,IALpB,mBAKVG,EALU,KAKFC,EALE,OAMSJ,mBAAS,WANlB,mBAMVK,EANU,KAMHC,EANG,KAQXC,EAAG,0CAAsCF,EAAtC,mBAPM,WAON,oBANO,oCAQhBG,qBAAU,WACTC,MACE,CAACJ,IAEJ,IAAMI,EAAU,uCAAG,8BAAAC,EAAA,sEACKC,MAAMJ,GADX,cACZK,EADY,gBAECA,EAASC,OAFV,OAEZC,EAFY,OAGlBZ,EAAWY,EAAKC,MAChBC,QAAQC,IAAIH,EAAKC,MAJC,2CAAH,qDAkBhB,OACC,sBAAKxB,UAAU,MAAf,UACC,uBAAM2B,SARU,SAACC,GAClBA,EAAEC,iBACFd,EAASH,GACTC,EAAU,KAKkBb,UAAU,cAArC,UACC,uBACC8B,KAAK,OACL9B,UAAU,aACV+B,MAAOnB,EACPoB,SAlBiB,SAACJ,GACrBf,EAAUe,EAAEK,OAAOF,OACnBN,QAAQC,IAAId,MAkBV,wBAAQkB,KAAK,SAAS9B,UAAU,gBAAhC,uBAID,qBAAKA,UAAU,UAAf,SACEU,EAAQP,KAAI,SAACD,GAAD,OACZ,cAAC,EAAD,CAECN,MAAOM,EAAOA,OAAOgC,MACrBrC,SAAUK,EAAOA,OAAOL,SACxBC,MAAOI,EAAOA,OAAOJ,MACrBC,YAAaG,EAAOA,OAAOH,aAJtBG,EAAOA,OAAOgC,iBCxCVC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,0B","file":"static/js/main.20a853ab.chunk.js","sourcesContent":["import React from 'react';\r\nimport style from './recipe.module.css';\r\n\r\nconst Recipe = ({ title, calories, image, ingredients }) => {\r\n\treturn (\r\n\t\t<div className={style.recipe}>\r\n\t\t\t<h1>{title}</h1>\r\n\t\t\t<ol>\r\n\t\t\t\t{ingredients.map((ingredient) => (\r\n\t\t\t\t\t<li>{ingredient.text}</li>\r\n\t\t\t\t))}\r\n\t\t\t</ol>\r\n\t\t\t<p>{calories}</p>\r\n\t\t\t<img src={image} alt='' />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Recipe;\r\n","import React, { useEffect, useState } from 'react';\nimport Recipe from './Recipe';\nimport './App.css';\n\nconst App = () => {\n\tconst APP_ID = 'a440556f';\n\tconst APP_KEY = 'f48cfea6bdd5a556021d14e73d1a8cf9';\n\n\tconst [recipes, setRecipes] = useState([]);\n\tconst [search, setSearch] = useState('');\n\tconst [query, setQuery] = useState('chicken');\n\n\tconst URL = `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`;\n\n\tuseEffect(() => {\n\t\tgetRecipes();\n\t}, [query]);\n\n\tconst getRecipes = async () => {\n\t\tconst response = await fetch(URL);\n\t\tconst data = await response.json();\n\t\tsetRecipes(data.hits);\n\t\tconsole.log(data.hits);\n\t};\n\n\tconst updateSearch = (e) => {\n\t\tsetSearch(e.target.value);\n\t\tconsole.log(search);\n\t};\n\n\tconst getSearch = (e) => {\n\t\te.preventDefault();\n\t\tsetQuery(search);\n\t\tsetSearch('');\n\t};\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t<form onSubmit={getSearch} className='search-form'>\n\t\t\t\t<input\n\t\t\t\t\ttype='text'\n\t\t\t\t\tclassName='search-bar'\n\t\t\t\t\tvalue={search}\n\t\t\t\t\tonChange={updateSearch}\n\t\t\t\t/>\n\t\t\t\t<button type='submit' className='search-button'>\n\t\t\t\t\tSearch\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t\t<div className='recipes'>\n\t\t\t\t{recipes.map((recipe) => (\n\t\t\t\t\t<Recipe\n\t\t\t\t\t\tkey={recipe.recipe.label}\n\t\t\t\t\t\ttitle={recipe.recipe.label}\n\t\t\t\t\t\tcalories={recipe.recipe.calories}\n\t\t\t\t\t\timage={recipe.recipe.image}\n\t\t\t\t\t\tingredients={recipe.recipe.ingredients}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__1x_EL\"};"],"sourceRoot":""}