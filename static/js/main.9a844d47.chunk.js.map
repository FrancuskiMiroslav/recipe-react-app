{"version":3,"sources":["Recipe.js","App.js","reportWebVitals.js","index.js"],"names":["Recipe","title","calories","image","src","alt","App","URL","useState","recipes","setRecipes","useEffect","getRecipes","a","fetch","response","json","data","hits","console","log","className","type","map","recipe","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAYeA,EAVA,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAClC,OACC,gCACC,6BAAKF,IACL,4BAAIC,IACJ,qBAAKE,IAAKD,EAAOE,IAAI,SCmCTC,G,MAtCH,WACX,IAGMC,EAAG,yDAHM,WAGN,oBAFO,oCAFC,EAMaC,mBAAS,IANtB,mBAMVC,EANU,KAMDC,EANC,KAQjBC,qBAAU,WACTC,MACE,IAEH,IAAMA,EAAU,uCAAG,8BAAAC,EAAA,sEACKC,MAAMP,GADX,cACZQ,EADY,gBAECA,EAASC,OAFV,OAEZC,EAFY,OAGlBP,EAAWO,EAAKC,MAChBC,QAAQC,IAAIH,EAAKC,MAJC,2CAAH,qDAOhB,OACC,sBAAKG,UAAU,MAAf,UACC,uBAAMA,UAAU,cAAhB,UACC,uBAAOC,KAAK,OAAOD,UAAU,eAC7B,wBAAQC,KAAK,SAASD,UAAU,gBAAhC,uBAIAZ,EAAQc,KAAI,SAACC,GAAD,OACZ,cAAC,EAAD,CACCvB,MAAOuB,EAAOA,OAAOC,MACrBvB,SAAUsB,EAAOA,OAAOtB,SACxBC,MAAOqB,EAAOA,OAAOrB,gBCvBXuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9a844d47.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Recipe = ({ title, calories, image }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>{title}</h1>\r\n\t\t\t<p>{calories}</p>\r\n\t\t\t<img src={image} alt='' />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Recipe;\r\n","import React, { useEffect, useState } from 'react';\nimport Recipe from './Recipe';\nimport './App.css';\n\nconst App = () => {\n\tconst APP_ID = 'a440556f';\n\tconst APP_KEY = 'f48cfea6bdd5a556021d14e73d1a8cf9';\n\n\tconst URL = `https://api.edamam.com/search?q=chicken&app_id=${APP_ID}&app_key=${APP_KEY}`;\n\n\tconst [recipes, setRecipes] = useState([]);\n\n\tuseEffect(() => {\n\t\tgetRecipes();\n\t}, []);\n\n\tconst getRecipes = async () => {\n\t\tconst response = await fetch(URL);\n\t\tconst data = await response.json();\n\t\tsetRecipes(data.hits);\n\t\tconsole.log(data.hits);\n\t};\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t<form className='search-form'>\n\t\t\t\t<input type='text' className='search-bar' />\n\t\t\t\t<button type='submit' className='search-button'>\n\t\t\t\t\tSearch\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t\t{recipes.map((recipe) => (\n\t\t\t\t<Recipe\n\t\t\t\t\ttitle={recipe.recipe.label}\n\t\t\t\t\tcalories={recipe.recipe.calories}\n\t\t\t\t\timage={recipe.recipe.image}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</div>\n\t);\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}